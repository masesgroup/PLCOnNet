/*
*  Copyright (c) 2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using plc4j-api-0.13.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Plc4x.JavaNs.Api
{
    #region PlcConnection declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html"/>
    /// </summary>
    public partial class PlcConnection : Java.Lang.AutoCloseable
    {
        const string _bridgeClassName = "org.apache.plc4x.java.api.PlcConnection";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("PlcConnection class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PlcConnection() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PlcConnection(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("PlcConnection class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public PlcConnection(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => true;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => true;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region IPlcConnection
    /// <summary>
    /// .NET interface skeleton to be manually developed following <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html"/>
    /// </summary>
    public partial interface IPlcConnection : Java.Lang.IAutoCloseable
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region PlcConnection implementation
    public partial class PlcConnection : Org.Apache.Plc4x.JavaNs.Api.IPlcConnection
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#getMetadata()"/> 
        /// </summary>
        public Org.Apache.Plc4x.JavaNs.Api.Metadata.PlcConnectionMetadata Metadata
        {
            get { return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Metadata.PlcConnectionMetadata>("getMetadata", "()Lorg/apache/plc4x/java/api/metadata/PlcConnectionMetadata;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#isConnected()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsConnected()
        {
            return IExecuteWithSignature<bool>("isConnected", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#ping()"/>
        /// </summary>
        /// <typeparam name="ReturnExtendsOrg_Apache_Plc4x_JavaNs_Api_Messages_PlcPingResponse"><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcPingResponse"/></typeparam>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<ReturnExtendsOrg_Apache_Plc4x_JavaNs_Api_Messages_PlcPingResponse> Ping<ReturnExtendsOrg_Apache_Plc4x_JavaNs_Api_Messages_PlcPingResponse>() where ReturnExtendsOrg_Apache_Plc4x_JavaNs_Api_Messages_PlcPingResponse : Org.Apache.Plc4x.JavaNs.Api.Messages.PlcPingResponse
        {
            return IExecuteWithSignature<Java.Util.Concurrent.CompletableFuture<ReturnExtendsOrg_Apache_Plc4x_JavaNs_Api_Messages_PlcPingResponse>>("ping", "()Ljava/util/concurrent/CompletableFuture;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#parseTagAddress(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Org.Apache.Plc4x.JavaNs.Api.Model.PlcTag> ParseTagAddress(Java.Lang.String arg0)
        {
            return IExecuteWithSignature<Java.Util.Optional<Org.Apache.Plc4x.JavaNs.Api.Model.PlcTag>>("parseTagAddress", "(Ljava/lang/String;)Ljava/util/Optional;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#parseTagValue(org.apache.plc4x.java.api.model.PlcTag,java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Plc4x.JavaNs.Api.Model.PlcTag"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Org.Apache.Plc4x.JavaNs.Api.Value.PlcValue> ParseTagValue(Org.Apache.Plc4x.JavaNs.Api.Model.PlcTag arg0, params object[] arg1)
        {
            if (arg1.Length == 0) return IExecuteWithSignature<Java.Util.Optional<Org.Apache.Plc4x.JavaNs.Api.Value.PlcValue>>("parseTagValue", "(Lorg/apache/plc4x/java/api/model/PlcTag;[Ljava/lang/Object;)Ljava/util/Optional;", arg0); else return IExecuteWithSignature<Java.Util.Optional<Org.Apache.Plc4x.JavaNs.Api.Value.PlcValue>>("parseTagValue", "(Lorg/apache/plc4x/java/api/model/PlcTag;[Ljava/lang/Object;)Ljava/util/Optional;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#browseRequestBuilder()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcBrowseRequest.Builder"/></returns>
        public Org.Apache.Plc4x.JavaNs.Api.Messages.PlcBrowseRequest.Builder BrowseRequestBuilder()
        {
            return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Messages.PlcBrowseRequest.Builder>("browseRequestBuilder", "()Lorg/apache/plc4x/java/api/messages/PlcBrowseRequest$Builder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#readRequestBuilder()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcReadRequest.Builder"/></returns>
        public Org.Apache.Plc4x.JavaNs.Api.Messages.PlcReadRequest.Builder ReadRequestBuilder()
        {
            return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Messages.PlcReadRequest.Builder>("readRequestBuilder", "()Lorg/apache/plc4x/java/api/messages/PlcReadRequest$Builder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#subscriptionRequestBuilder()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcSubscriptionRequest.Builder"/></returns>
        public Org.Apache.Plc4x.JavaNs.Api.Messages.PlcSubscriptionRequest.Builder SubscriptionRequestBuilder()
        {
            return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Messages.PlcSubscriptionRequest.Builder>("subscriptionRequestBuilder", "()Lorg/apache/plc4x/java/api/messages/PlcSubscriptionRequest$Builder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#unsubscriptionRequestBuilder()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcUnsubscriptionRequest.Builder"/></returns>
        public Org.Apache.Plc4x.JavaNs.Api.Messages.PlcUnsubscriptionRequest.Builder UnsubscriptionRequestBuilder()
        {
            return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Messages.PlcUnsubscriptionRequest.Builder>("unsubscriptionRequestBuilder", "()Lorg/apache/plc4x/java/api/messages/PlcUnsubscriptionRequest$Builder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#writeRequestBuilder()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Plc4x.JavaNs.Api.Messages.PlcWriteRequest.Builder"/></returns>
        public Org.Apache.Plc4x.JavaNs.Api.Messages.PlcWriteRequest.Builder WriteRequestBuilder()
        {
            return IExecuteWithSignature<Org.Apache.Plc4x.JavaNs.Api.Messages.PlcWriteRequest.Builder>("writeRequestBuilder", "()Lorg/apache/plc4x/java/api/messages/PlcWriteRequest$Builder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#close()"/>
        /// </summary>
        /// <exception cref="Java.Lang.Exception"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.plc4x/plc4j-api/0.13.1/org/apache/plc4x/java/api/PlcConnection.html#connect()"/>
        /// </summary>
        /// <exception cref="Org.Apache.Plc4x.JavaNs.Api.Exceptions.PlcConnectionException"/>
        public void Connect()
        {
            IExecuteWithSignature("connect", "()V");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}